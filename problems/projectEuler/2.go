package projectEuler

/**
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

func isEven(num int) bool {
  return num % 2 == 0
}

func CalculateSumOfEvenFibonacciNums() int {
  sum := 0
  currentNums := [2]int{0,1} // Only need to store two values at a time
  const FourMillion = 4000000
  for (currentNums[0] <= FourMillion) && (currentNums[1] <= FourMillion) {
    newValue := currentNums[0] + currentNums[1]
    if isEven(newValue) {
      sum = sum + newValue
    }
    currentNums[0] = currentNums[1]
    currentNums[1] = newValue
  }

  return sum
}
